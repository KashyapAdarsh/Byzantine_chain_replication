import os
from logger import *
import time
import sys
from olympus import Olympus
from constants import *
from client import Client

# Reads all the configurations from the file
def read_config(file, log):
	config = {}
	lines = None
	try:
		lines = open(file, "r").readlines()
	except:
		log.error(file + " : No such file or directory")
		exit()

	for line in lines:
		if (not line.startswith('#') and not line.startswith('\n')):
			config[line.split('=')[0].strip()] = line.split('=')[1].strip()
	return config		

# Might need this to verify if all configurations are read properly
def verify_config():
	pass

def main():

	# Helper methods required to initialize the system
	def initialize_olympus(config):
		log.info(INFO + "Initializing olympus")
		olympus = new(Olympus, num=1)
		setup(olympus, [config])
		start(olympus)
		return olympus

	def initialize_client(config, olympus, num):
		log.info(INFO + "Initializing clients")
		clients = new(Client, num=num)
		client_num = 0
		for client in clients:
			# Get workload for every client
			work_load = config[WORKLOAD + "[" + str(client_num) + "]"].split(';')
			setup(client, [olympus, client, config, work_load])
			start(client)
			client_num += 1

	# Program starts execution from here

	file = "../config/default.config"
	olympus = None
	INFO = "[MAIN] "

	if(len(sys.argv) == 1):
		set_file_name("default_config")
		log.info(INFO  + "Using default config file : " + "config/default.config")
	else:
		set_file_name(sys.argv[1])
		log.info(INFO + "Using custom config : " + sys.argv[1])
		file = sys.argv[1]

	config = read_config(file, log)
	# log.info(INFO + "Config received: " + str(config))

	# Initialize Olympus
	olympus = initialize_olympus(config)

	time.sleep(1)

	# Initialize a client
	initialize_client(config, olympus, int(config[CLIENT_COUNT]))