import uuid

class data:
    def __init__(self, key, value):
        self.key = key
        self.value = value

# intial configurations that every replica will receive

class ReplicaConfig:
	def __init__(self, id, replica_keys, signing_key, data_store, mode, replica_list, testcase_name, checkpoint_num, config_count):
		self.id = id
		self.head_id = None
		self.signing_key = signing_key
		self.new_config_count = config_count
		self.replica_keys = replica_keys
		self.replica_list = replica_list
		self.prev_replica_id = None
		self.next_replica_id = None
		self.clients = None
		self.head_timeout = None
		self.nonhead_timeout = None
		self.is_head = False
		self.is_tail = False
		self.data_store = data_store
		self.mode = mode
		self.checkpoint_num = checkpoint_num
		self.testcase_name = testcase_name

# Configuration object that everyclient will receive

class ClientConfig:
	def __init__(self, replicas, replica_list, tolerance):
		self.replicas = replicas
		self.replica_list = replica_list
		self.head_id = None
		self.tail_id = None
		self.t = tolerance

class Operation:
	def __init__(self, operation_type, msg_id, data, client_id):
		self.type = operation_type
		self.msg_id = msg_id
		self.data = data
		self.client_id = client_id

class Data:
	def __init__(self, key, value):
		self.key = key
		self.value = value

class ClientMessage:
	def __init__(self, is_response_received, operation):
		self.is_response_received = False
		self.operation = operation
		self.is_retransmited = False

class ResponseObject:
	def __init__(self, msg_id, result, proof):
		self.msg_id = msg_id
		self.result = result
		self.result_proof = proof

class OrderShuttle:
	def __init__(self, slot, operation, client):
		self.slot = slot
		self.operation = operation
		self.statements = []
		self.client_id = client

class OrderStatement:
	def __init__(self, slot, operation, id):
		self.slot = slot
		self.operation = operation
		self.replica_id = id

class ResultShuttle:
	def __init__(self, client, msg_id, result, operation):
		self.client_id = client
		self.msg_id = msg_id
		self.statements = []
		self.result = result
		self.operation = operation

class ResultStatement:
	def __init__(self, result, operation):
		self.operation = operation
		self.result = result

class FailureConfig:
	def __init__(self, client, msg_count, shuttle_type, opt, arg):
		self.client_id = client
		self.msg_count = msg_count
		self.shuttle_type = shuttle_type
		self.opt_type = opt
		self.opt_arg = arg

class CheckpointShuttle:
	def __init__(self, slot):
		self.slot = slot
		self.statements = []

class CheckpointStatement:
	def __init__(self, hashed_data):
		self.hashed_data = hashed_data

class wedgedData:
	def __init__(self, id, hist, checkpoint, slot):
		self.replica_id = id
		self.history = hist
		self.checkpoint = checkpoint
		self.slot = slot
