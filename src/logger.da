import logging
import sys

file_name = ""

def setup_custom_logger(name, config_name):
    formatter = logging.Formatter(fmt='%(asctime)s %(levelname)-8s %(message)s',
                                  datefmt='%Y-%m-%d %H:%M:%S')
    file_name = '../logs/'+config_name+"log.txt"
    print("Logging file name : " ,(config_name+"log.txt"))
    handler = logging.FileHandler(file_name, mode='a')
    handler.setFormatter(formatter)
    screen_handler = logging.StreamHandler(stream=sys.stdout)
    screen_handler.setFormatter(formatter)
    logger = logging.getLogger(name)
    logger.setLevel(logging.DEBUG)
    logger.addHandler(handler)
    logger.addHandler(screen_handler)
    return logger

def set_file_name(name):
    global file_name
    file_name = (name + "_")

name = "default_"
'''
if (len(sys.argv) > 4):
    config = sys.argv[4]
    name = config.split("/")
    name = name[len(name) - 1] + "_"
'''

log = setup_custom_logger("ByzantineChainReplication", "default_")